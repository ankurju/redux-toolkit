{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  isCounterVisible: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.isCounterVisible = !state.isCounterVisible;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/Ankur/Desktop/ReactCourse/New folder/react-redux/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","isCounterVisible","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CADiB;AAE1BC,EAAAA,gBAAgB,EAAE;AAFQ,CAA5B;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACN,gBAAN,GAAyB,CAACM,KAAK,CAACN,gBAAhC;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAkBA,MAAMY,gBAAgB,GAAG;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAzB;AAEA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAES,gBAFc;AAG5BR,EAAAA,QAAQ,EAAE;AACRW,IAAAA,KAAK,CAACT,KAAD,EAAQ;AAAEA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AAA+B,KADtC;;AAERG,IAAAA,MAAM,CAACV,KAAD,EAAQ;AAAEA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AAA+B;;AAFvC;AAHkB,CAAD,CAA7B;AASA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAE;AACPnB,IAAAA,OAAO,EAACE,YAAY,CAACiB,OADd;AAEPC,IAAAA,IAAI,EAACL,SAAS,CAACI;AAFR;AADkB,CAAD,CAA5B;AAOA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AAEP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = {\r\n  counter: 0,\r\n  isCounterVisible: true,\r\n};\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.isCounterVisible = !state.isCounterVisible;\r\n    },\r\n  },\r\n});\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authSlice = createSlice({\r\n  name: 'authentication',\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) { state.isAuthenticated = true; },\r\n    logout(state) { state.isAuthenticated = false;}\r\n  }\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter:counterSlice.reducer,\r\n    auth:authSlice.reducer\r\n  }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}